package net.acperience.cloudplayer;

import java.io.IOException;
import java.io.PrintWriter;

import javax.security.auth.login.LoginException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sourceforge.jtpl.Jtpl;

public class ServletAuth extends HttpServlet{
		
	public ServletAuth(){
		// ...
	}

	/**
	 * Generated by Eclipse
	 */
	private static final long serialVersionUID = -2920347430404215837L;

	/** 
     * Handles the HTTP <code>GET</code> method.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs`
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
    	
    	response.setContentType("text/html;charset=UTF-8");
    	response.setCharacterEncoding("UTF-8");
    	PrintWriter out = response.getWriter();
    	Jtpl body = MusicUtility.createBodyTpl(this, MusicUtility.TPL_DIR + "login.tpl");
	    try{	
	    	// IMPORTANT - Check we are on HTTPS
	    	if (!request.isSecure()){
	    		response.sendRedirect("https://" + request.getServerName()+ ":" + Integer.toString(MusicUtility.SECURE_PORT) + "/auth");
	    		return;
	    	}
	    	
	    	// Let's check if there's a ?logout request
	    	if (request.getParameter("logout") != null)
	    		MusicKerberos.createMusicKerberos(request, this).logout();
	    	
	    	if (isUserAuthenticated(request)){
	    		response.sendRedirect("/");
	    	}
	    	body.assign("message", "");
	    } catch (LoginException e) {
	    	body.assign("message", "We could not contact the authentication server. Please try again later.");
		} catch (SecurityException e) {
			body.assign("message", "There was an unexpected error. Please try again later.");
		}
	    finally{
	    	// Print the page
	    	
			body.parse("Body");
			out.print(MusicUtility.outputPage(this, "Login", body));
	    }
    }

    /** 
     * Handles the HTTP <code>POST</code> method.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException
    {
    	response.setContentType("text/html;charset=UTF-8");
    	response.setCharacterEncoding("UTF-8");
    	PrintWriter out = response.getWriter();
    	Jtpl body = MusicUtility.createBodyTpl(this, MusicUtility.TPL_DIR + "login.tpl");
	    try{	
	    	// IMPORTANT - Check we are on HTTPS
	    	if (!request.isSecure()){
	    		response.sendRedirect("https://" + request.getServerName()+ ":" + Integer.toString(MusicUtility.SECURE_PORT) + "/auth");
	    		return;
	    	}
	    	if (isUserAuthenticated(request)){
	    		response.sendRedirect("/");
	    		return;
	    	}
	    	else{
	    		// Attempt to login
	    		MusicKerberos userAuth = MusicKerberos.createMusicKerberos(request, this);
	    		// Do Login
	    		userAuth.login();
	    		// Check that user is authenticated again
	    		if (isUserAuthenticated(request)){
	    			response.sendRedirect("/");
	    		}
	    	}
	    } catch (LoginException e) {
			body.assign("message", "Login failed. Perhaps you provided the wrong credentials?");
		} catch (SecurityException e) {
			body.assign("message", "Login failed. There was an unexpected error. Please try again later.");
		}
	    finally{
	    	// Output Login
	    	body.parse("Body");
			out.print(MusicUtility.outputPage(this, "Login", body));
	    }
    }
    
    /** 
     * Returns a short description of the servlet.
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo(){
        return "Short description";
    }

    
    /**
     * Check if a user has been authenticated before
     * @throws SecurityException 
     * @throws LoginException 
     */
    
    public boolean isUserAuthenticated(HttpServletRequest request) throws LoginException, SecurityException{
    	// Check if user has an authenticated session
    	MusicKerberos obj = MusicKerberos.createMusicKerberos(request, this);
    	return obj.isAuthenticated();
    }
}
